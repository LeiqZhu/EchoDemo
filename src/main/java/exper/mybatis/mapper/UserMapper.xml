<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="exper.mybatis.mapper.UserMapper">
    <!-- 自定义返回结果集 -->
    <resultMap id="userMap" type="User">
        <id property="id" column="id" javaType="java.lang.Integer"></id>
        <result property="userName" column="user_name" javaType="java.lang.String"></result>
        <result property="password" column="password" javaType="java.lang.String"></result>
        <result property="account" column="account" javaType="java.lang.Double"></result>
    </resultMap>
    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
                方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->


    <insert id="insertUser" useGeneratedKeys="true" keyProperty="user.id">
        insert into t_user (user_name,password,account) values (#{user.userName},#{user.password},#{user.account})
    </insert>

    <update id="updateUser" >
        update t_user set user_name=#{u.userName},password=#{u.password},account=#{u.account} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from t_user where id=#{id}
    </delete>

    <select id="selectUserById" parameterType="int" resultMap="userMap">
        select * from t_user where id=#{id}
    </select>

    <select id="selectAllUser" resultMap="userMap">
        select * from t_user
    </select>

    <!--批量操作和foreach标签-->
    <insert id="batchInsertUser" parameterType="java.util.List">
        INSERT INTO t_user VALUES
            <foreach collection="users" item="user" separator=",">
                (NULL ,#{user.userName} ,#{user.password}, #{user.account})
            </foreach>
    </insert>

    <delete id="batchDeleteUser" parameterType="java.util.List">
        DELETE FROM t_user WHERE id IN (
        <foreach collection="list" item="l" separator=",">
            #{l}
        </foreach>
        )
    </delete>

    <!--分页查询-->
    <!--#在生成SQL时，对于字符类型参数，会拼装引号
    $在生成SQL时，不会拼装引号，可用于order by之类的参数拼装-->
    <select id="pagerUser" parameterType="java.util.Map" resultMap="userMap">
        SELECT * FROM t_user WHERE 1=1
        <if test="userName!=null">
            AND user_name LIKE '${userName}'
        </if>
        LIMIT ${index},${pageSize}
    </select>
    
    <!--统计查询-->
    <select id="countUser" parameterType="java.util.Map" resultType="int">
        SELECT count(1) FROM t_user WHERE 1=1
        <if test="username != null">
            AND user_name LIKE '%${username}%'
        </if>
    </select>

</mapper>